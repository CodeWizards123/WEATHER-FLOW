# Configuration pyyaml file with configuration settings required (as args) for main.py

############################ General data configurations ############################

increment: 
  type: int[]
  default: [100,200,300,8760, 10920, 13106, 15312, 17520, 19704, 21888, 24096, 26304,
                 28464, 30648, 32856, 35064, 37224, 39408, 41616, 43824, 45984,
                 48168, 50376, 52584, 54768, 56952, 59160, 61368, 63528, 65712,
                 67920, 70128, 72288, 74472, 76680, 78888, 81048, 83232, 85440,
                 87648, 89832, 92016, 94224, 96432, 98592, 100776, 102984, 105192,
                 107352, 109536, 111744, 113929]
  help:  List of points to split data in train, validation, and test sets for walk-forward validation. The first marker, 
    8784 is one year's worth of data, the next step is 3 months of data, and the following step is also 3 months of 
    data, resulting in rolling walk-forward validation where the train size increases each increment, with the 
    validation and test sets each being 3 months' worth of data.

stations:
  type: str[]
  default: ['ADDO ELEPHANT PARK', 'ALEXANDERBAAI', 'ALIWAL-NORTH PLAATKOP', 'BARKLY-OOS (CAERLEON)',
                'BRANDVLEI', 'CALVINIA WO', 'CAPE TOWN WO', 'DE AAR WO', 'DOHNE - AGR', 'EAST LONDON WO',
                'EXCELSIOR CERES', 'FORT BEAUFORT', 'FRASERBURG', 'GEORGE WITFONTEIN', 'GEORGE WO', 
                'GRAAFF - REINET', 'GRAHAMSTOWN', 'KOINGNAAS', 'LADISMITH', 'LAINGSBURG', 'LANGGEWENS',
                'MALMESBURY', 'MOLTENO RESERVOIR','NOUPOORT','OUDTSHOORN', 'PATENSIE','POFADDER', 
                'PORT ALFRED - AIRPORT','PORT ELIZABETH AWOS', 'PORT ELIZABETH AWS','PORT NOLLOTH','PORTERVILLE', 
                'PRIESKA', 'REDELINGSHUYS-AWS','RIVERSDALE','SOMERSET EAST','SPRINGBOK WO','TWEE RIVIEREN',
                'UITENHAGE','UPINGTON WO', 'VANWYKSVLEI','VIOOLSDRIF - AWS','VREDENDAL','WILLOWMORE','WORCESTER-AWS']
  help: list of all stations names

n_stations:
  type: int
  default: 45
  help: number of weather stations

n_split:
  type: int
  default: 47
  help: number of splits in walk-forward validation


############################ Train final baseline and GNN model arguments ############################
train_tcn:
  type: bool
  default: false
  help: whether to train final TCN models
train_gwn:
  type: bool
  default: false
  help: whether to train final GWN model


############################ Random Search HPO arguments ############################ 
tune_tcn:
  type: bool
  default: false
  help: whether to perform random search HPO on TCN models
tune_gwn:
  type: bool
  default: false
  help: whether to perform random search HPO on GWN model
num_configs:
  type: int
  default: 30
  help: number of random configurations to search through

############################  Calculate metrics of final models' results arguments ############################
eval_tcn:
  type: bool
  default: false
  help: whether to report final TCN metrics
eval_gwn:
  type: bool
  default: false
  help: whether to report final GWN metrics

############################ Visualise Adjacency Matrix ############################
vis:
  type: bool
  default: false
  help: whether to create visualisations
modelVis:
  type: str
  default: GWN
  help: the model to visualise
horizonVis:
  type: str
  default: "3"
  help: the horizon to visualise
splitVis:
  type: str
  default: "0"
  help: the split to visualise


###################### Baseline GWN args, default arguments are optimal hyper-parameters ######################
device:
  type: str
  default: cpu
  help: device to place model on
data:
  type: str
  default: 'DataNew/Graph Neural Network Data/Graph Station Data/Graph.csv' #DataNew
  help: data path
adjdata:
  type: str
  default: 'DataNew/Graph Neural Network Data/Adjacency Matrix/adj_mx.pkl'  #DataNew
  help: adj data path
adjtype:
  type: str
  default: doubletransition
  help: adj type
gcn_bool:
  type: bool
  default: true
  help: whether to add graph convolution layer
aptonly:
  type: bool
  default: true
  help: whether only adaptive adj
addaptadj:
  type: bool
  default: true
  help: whether add adaptive adj
randomadj:
  type: bool
  default: true
  help: whether random initialize adaptive adj
seq_length:
  type: int
  default: 24
  help: length of output sequence
lag_length:
  type: int
  default: 12
  help: length of input sequence
nhid:
  type: int
  default: 32
  help: ''
in_dim:
  type: int
  default: 6
  help: number of features in input
num_layers:
  type: int
  default: 2
  help: number of layers
batch_size:
  type: int
  default: 64
  help: batch size
patience:
  type: int
  default: 9
  help: patience
learning_rate:
  type: float
  default: 0.001
  help: learning rate
dropout:
  type: float
  default: 0.3
  help: dropout rate
weight_decay:
  type: float
  default: 0.0001
  help: weight decay rate
epochs:
  type: int
  default: 3
  help: ''
save:
  type: str
  default: 'Garage/Final Models/GWN/'
  help: save path

####################### Baseline TCN args, default arguments are optimal hyper-parameters ########################
epochTCN: 
  type: int
  default: 40
  help: epochs to run for training
lr:
  type: float
  default: 0.01
  help: learning rate
patienceTCN:
  type: int
  default: 5
  help: patience value for early stopping
loss_metric:
  type: str
  default: 'MSE'
  help: loss metric to optimize
kernels:
  type: int
  default: 2
  help: number of kernels
dilations:
  type: list
  default: [1, 2, 4, 8, 16, 32, 64]
  help: list of dilation values
batch_norm:
  type: bool
  default: false
  help: whether to use batch normalization
weight_norm:
  type: bool
  default: false
  help: whether to use weight normalization
layer_norm:
  type: bool
  default: true
  help: whether to use layer normalization
padding:
  type: str
  default: 'causal'
  help: type of padding to use